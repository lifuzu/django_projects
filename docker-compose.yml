version: '3.3'

services:
  db:
    image: "postgres:latest"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./tools/entrypoint/db.sh:/docker-entrypoint-initdb.d/init-db.sh

  redis:
    image: "redis:alpine"
    restart: always

  nginx:
    image: "nginx:latest"
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./tools/templates/nginx.instance.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/static
      - media_volume:/mediafiles
    # command: >
    #   /bin/bash -c "
    #   cat /tmp/nginx.template.conf
    #   && envsubst \"`for v in $$(compgen -v);do printf '$${%s} ' $$v;done`'\"
    #   < /tmp/nginx.template.conf
    #   > /etc/nginx/conf.d/default.conf
    #   && cat /etc/nginx/conf.d/default.conf
    #   && nginx -g 'daemon off;'"
    depends_on:
      - web

  web:
    image: rili/django_projects
    # build: .
    # command: bash -c "python /code/manage.py migrate --noinput && python /code/manage.py runserver 0.0.0.0:8000"
    # volumes:
    #   - .:/code
    ports:
      - "8000:8000"
      - "127.0.0.1:5555:5555"
      - "127.0.0.1:9001:9001"
    environment:
      - LOGSTASH_HOST=logstash
      - DB_KIND=${DB_KIND}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - MEDIA_HOME=${MEDIA_HOME}
    logging:
      driver: "json-file"
    volumes:
      - ./tools/entrypoint/web.sh:${DEPLOY_HOME}/tools/entrypoint/web.sh
      - static_volume:${DEPLOY_HOME}/static
      - media_volume:${MEDIA_HOME}/mediafiles
    depends_on:
      - db
      - redis

volumes:
  postgres_data:
  static_volume:
  media_volume:
